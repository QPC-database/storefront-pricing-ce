<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: prices.proto

namespace Magento\PricingStorefrontApi\Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Create Price Book request
 *
 * Generated from protobuf message <code>magento.pricingStorefrontApi.proto.PriceBookCreateRequest</code>
 */
class PriceBookCreateRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Price book name (e.g. "10% off on selected products")
     *
     * Generated from protobuf field <code>string name = 1;</code>
     */
    protected $name = '';
    /**
     * Parent Price Book Id.
     * Used to build fallback system and find price in parent price book if price not present in requested price book
     *
     * Generated from protobuf field <code>string parent_id = 2;</code>
     */
    protected $parent_id = '';
    /**
     * A combination of scopes must be unique.
     * Error will be returned in case when combination is occupied by another price book.
     *
     * Generated from protobuf field <code>.magento.pricingStorefrontApi.proto.Scope scope = 3;</code>
     */
    protected $scope = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Price book name (e.g. "10% off on selected products")
     *     @type string $parent_id
     *           Parent Price Book Id.
     *           Used to build fallback system and find price in parent price book if price not present in requested price book
     *     @type \Magento\PricingStorefrontApi\Proto\Scope $scope
     *           A combination of scopes must be unique.
     *           Error will be returned in case when combination is occupied by another price book.
     * }
     */
    public function __construct($data = null)
    {
        \Magento\PricingStorefrontApi\Metadata\Prices::initOnce();
        parent::__construct($data);
    }

    /**
     * Price book name (e.g. "10% off on selected products")
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Price book name (e.g. "10% off on selected products")
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, true);
        $this->name = $var;

        return $this;
    }

    /**
     * Parent Price Book Id.
     * Used to build fallback system and find price in parent price book if price not present in requested price book
     *
     * Generated from protobuf field <code>string parent_id = 2;</code>
     * @return string
     */
    public function getParentId()
    {
        return $this->parent_id;
    }

    /**
     * Parent Price Book Id.
     * Used to build fallback system and find price in parent price book if price not present in requested price book
     *
     * Generated from protobuf field <code>string parent_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setParentId($var)
    {
        GPBUtil::checkString($var, true);
        $this->parent_id = $var;

        return $this;
    }

    /**
     * A combination of scopes must be unique.
     * Error will be returned in case when combination is occupied by another price book.
     *
     * Generated from protobuf field <code>.magento.pricingStorefrontApi.proto.Scope scope = 3;</code>
     * @return \Magento\PricingStorefrontApi\Proto\Scope
     */
    public function getScope()
    {
        return $this->scope;
    }

    /**
     * A combination of scopes must be unique.
     * Error will be returned in case when combination is occupied by another price book.
     *
     * Generated from protobuf field <code>.magento.pricingStorefrontApi.proto.Scope scope = 3;</code>
     * @param \Magento\PricingStorefrontApi\Proto\Scope $var
     * @return $this
     */
    public function setScope($var)
    {
        GPBUtil::checkMessage($var, \Magento\PricingStorefrontApi\Proto\Scope::class);
        $this->scope = $var;

        return $this;
    }
}
