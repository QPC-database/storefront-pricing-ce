<?php
# Generated by the Magento PHP proto generator.  DO NOT EDIT!

/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */

declare(strict_types=1);

namespace Magento\PricingStorefrontApi\Api\Data;

/**
 * Autogenerated description for ProductPrice class
 *
 * phpcs:disable Magento2.PHP.FinalImplementation
 * @SuppressWarnings(PHPMD)
 * @SuppressWarnings(PHPCPD)
 */
final class ProductPrice implements ProductPriceInterface
{

    /**
     * @var string
     */
    private $entityId;

    /**
     * @var \Magento\PricingStorefrontApi\Api\Data\PriceInterface
     */
    private $minimumPrice;

    /**
     * @var \Magento\PricingStorefrontApi\Api\Data\PriceInterface
     */
    private $maximumPrice;

    /**
     * @var float
     */
    private $qty;
    
    /**
     * @inheritdoc
     *
     * @return string
     */
    public function getEntityId(): string
    {
        return (string) $this->entityId;
    }
    
    /**
     * @inheritdoc
     *
     * @param string $value
     * @return void
     */
    public function setEntityId(string $value): void
    {
        $this->entityId = $value;
    }
    
    /**
     * @inheritdoc
     *
     * @return \Magento\PricingStorefrontApi\Api\Data\PriceInterface|null
     */
    public function getMinimumPrice(): ?\Magento\PricingStorefrontApi\Api\Data\PriceInterface
    {
        return $this->minimumPrice;
    }
    
    /**
     * @inheritdoc
     *
     * @param \Magento\PricingStorefrontApi\Api\Data\PriceInterface $value
     * @return void
     */
    public function setMinimumPrice(\Magento\PricingStorefrontApi\Api\Data\PriceInterface $value): void
    {
        $this->minimumPrice = $value;
    }
    
    /**
     * @inheritdoc
     *
     * @return \Magento\PricingStorefrontApi\Api\Data\PriceInterface|null
     */
    public function getMaximumPrice(): ?\Magento\PricingStorefrontApi\Api\Data\PriceInterface
    {
        return $this->maximumPrice;
    }
    
    /**
     * @inheritdoc
     *
     * @param \Magento\PricingStorefrontApi\Api\Data\PriceInterface $value
     * @return void
     */
    public function setMaximumPrice(\Magento\PricingStorefrontApi\Api\Data\PriceInterface $value): void
    {
        $this->maximumPrice = $value;
    }
    
    /**
     * @inheritdoc
     *
     * @return float
     */
    public function getQty(): float
    {
        return (float) $this->qty;
    }
    
    /**
     * @inheritdoc
     *
     * @param float $value
     * @return void
     */
    public function setQty(float $value): void
    {
        $this->qty = $value;
    }
}
